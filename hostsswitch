#!/bin/bash
# -*- coding: utf-8	-*-


# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
# some ascii art
                            +--------------+
                           /|             /|
                          / |            / |
                         *--+-----------*  |
                         |  |           |  |
                         |  |  [cube]   |  |
                         |  |           |  |
                         |  +-----------+--+
                         | /            | /
                         |/             |/
                         *--------------*


# Using env bash is considered harmful:
# https://unix.stackexchange.com/questions/206350/what-is-the-difference-if-i-start-bash-with-bin-bash-or-usr-bin-env-bash
# I call this the unofficial bash strict mode. This causes bash to behave in a way that makes many classes of subtle bugs impossible. You'll spend much less time debugging, and also avoid having unexpected complications in production.
# https://sipb.mit.edu/doc/safe-shell/
# GLOBBING IS NOT ALLOWED!!
set -euf -o pipefail
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
IFS=$'\n\t'

export LC_ALL=C

# https://github.com/anordal/shellharden/blob/master/how_to_do_things_safely_in_bash.md
shopt -s nullglob globstar

[[ $LANG =~ UTF-?8$ ]] && echo "# -*- coding: utf-8 -*-"

HOSTNAME="$(hostname -a)"
HOSTSFILE="/etc/hosts"


# Default header block
HEADER=$(cat <<-EOF
    127.0.0.1       localhost ${HOSTNAME}
    255.255.255.255 broadcasthost
    ::1             localhost ip6-localhost ip6-loopback
    fe00::0         ip6-localnet
    ff00::0         ip6-mcastprefix
    ff02::1         ip6-allnodes
    ff02::2         ip6-allrouters
    ff02::3         ip6-allhosts
EOF
)
   
   
orighosts() {
    # https://www.fileformat.info/info/unicode/char/search.htm?q=return&preview=entity
    printf "\\u23CE original plain hosts file"
    # [ -n "$header" ]    && printf -- '\n%s\n%s\n%s\n' '# <header>'    "$header"    '# </header>'
    [[ -n "${HEADER}" ]] && printf -- "%s\\n" "${HEADER}" > "${HOSTSFILE}"
    printf "${HEADER}"
}


hblockhosts() {
    # https://www.fileformat.info/info/unicode/char/2588/index.htm
    printf "\\u2588 downloading & generating hBlock hosts file"
    # https://github.com/zant95/hBlock/blob/master/hblock
    hblock --output "${HOSTSFILE}" >/dev/null 2>&1
}


# sometimes https://francescocirillo.com/pages/anti-if-campaign is impossible
if [[ -f "${HOSTSFILE}" && $(stat -c%s "$HOSTSFILE") -gt 1000 ]]
then
    orighosts
else
    hblockhosts
fi
